{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","colors","Resume","_this","Object","classCallCheck","_super","call","handleScroll","prevPos","state","currentPos","window","pageYOffset","Math","abs","getColor","setState","pos","floor","random","length","addEventListener","work","CompanyName","specialization","MonthOfLeaving","YearOfLeaving","Achievements","ite","skillsDescription","skills","width","concat","level","skillname","education","UniversityName","MonthOfPassing","YearOfPassing","acheivements","event","desc","ContactUs","email","Footer","imagebaseurl","linkedinId","portfolio","description","imgurl","App","Header_Header","About_About","Resume_Resume","ContactUs_ContactUs","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1572bd50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n       \n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n              {/* <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li> */}\n              {/* <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li> */}\n              <li>\n                <a className=\"smoothscroll\" href=\"#contact\">\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            \n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\"> {resumeData.name}.</h1>\n              <h3 style={{ color: \"#C0C0C0\", fontFamily: \"sans-serif \" }}>\n                I am a {resumeData.role}.{resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span><a href={resumeData.website}>{resumeData.website}</a></span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nconst colors=['#F2F2F2','#F0ECEC','#8B8989','#BF6666','#F2C6C6','#F4A3A3','#D0CBCA','#F4F3F0','#F8F8E6']\nexport default  class Resume extends Component {\n  constructor(props){\n    super(props)\n    this.state={color:'',\n                prevPos:window.pageYOffset    }\n  }\n  getColor(){\n    const pos=Math.floor(Math.random() * colors.length)\n    return  colors[pos]\n  }\n  handleScroll=()=>{\n  const {prevPos}=this.state \n  const currentPos=window.pageYOffset\n    if(Math.abs(currentPos-prevPos)>30){\n      const color=this.getColor()\n      this.setState({prevPos:currentPos,color:color})\n    }\n\n  }\n  componentDidMount(){\n    window.addEventListener('scroll',this.handleScroll)\n  }\n  render() {\n    let resumeData = this.props.resumeData;\n    let {color}=this.state\n    return (\n      <section id=\"resume\" >\n\n         \n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          {item.Achievements.map(ite=>{\n                            return(<ul>\n                              <li>{ite}</li>\n                            </ul>)\n                            \n                          })}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span style={{width:`${item.level}%`}} className={`bar-expand `}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Achievements</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.acheivements && resumeData.acheivements.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.event}</h3>\n                          <p className=\"info\">\n                          {item.desc}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Works.</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n\n                        <img src={`${item.imgurl}`} className=\"item-img\" style={{height:'240px',width:'240px'}}/>\n                        <div className=\"overlay\">\n                          <div className=\"portfolio-item-meta\">\n                            <h5>{item.name}</h5>\n                            <p>{item.description}</p>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from \"react\";\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4>Discord : happychild_69#6975</h4>\n              <h4>Email :{resumeData.email}</h4>\n            </div>\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: \"https://picsum.photos/200/300\",\n  name: \"Souhardya Samanta\",\n  role: \"<Developer></Software Engineer>\",\n  linkedinId: \"\",\n  email: \"samantasouhardya@gmail.com\",\n  roleDescription: `Experienced with a demonstrated history of working in the information technology and services industry. Skilled in C, C++, Java, JavaScript, Reactjs, React Native, Flutter, Nodejs, HTML, CSS, Python, Data Analytics, Solidity, Firebase . `,\n  socialLinks: [\n    {\n      name: \"github\",\n      url: \"https://github.com/souhardya69\",\n      className: \"fa fa-github\",\n    },\n    {\n      name: \"Email\",\n      url: \"mailto:samantasouhardya@gmail.com\",\n      className: \"fa fa-envelope\",\n    },\n    {\n      name: \"Facebook\",\n      url: \"https://www.facebook.com/samanta.souhardya\",\n      className: \"fa fa-facebook\",\n    },\n    {\n      name: \"Instagram\",\n      url: \"https://www.instagram.com/sou_hardya/?hl=en\",\n      className: \"fa fa-instagram\",\n    },\n  ],\n  aboutme: `I am currently freelancing as Frontend Developer, Integration with backend and Testing. Interested to build things to make day to day life easier in individual prospect as well as in industries. Loves to work with new technology, UI and state management frameworks.`,\n  address: \"Kolkata,India\",\n  website: \"souhardya69.github.io\",\n  education: [\n    {\n      UniversityName: \"Brainware University\",\n      specialization: \"BTECH in Computer Science and Engineering(9.44 CGPA)\",\n      MonthOfPassing: \"July\",\n      YearOfPassing: \"2021\",\n    },\n    {\n      UniversityName: \"St' Joseph's College\",\n      specialization: \"ISC\",\n      MonthOfPassing: \"2017\",\n      YearOfPassing: \"75%\",\n    },\n    {\n      UniversityName: \"St' Mary's Orphanage & Day School\",\n      specialization: \"ICSE\",\n      MonthOfPassing: \"2015\",\n      YearOfPassing: \"75%\",\n    },\n  ],\n  acheivements: [\n    {\n      event: \"DigiCom Android App Dev Competition\",\n      desc: \"Placed 2nd\",\n      MonthOfPassing: \"April\",\n      YearOfPassing: \"2020\",\n    },\n    {\n      event: \"Internal Hackathon\",\n      desc: \"Participation\",\n      MonthOfPassing: \"Jan\",\n      YearOfPassing: \"2020\",\n    },\n    {\n      event: \"EthOnline Hackathon Etherium Blockchain Development\",\n      desc: \"Participation\",\n      MonthOfPassing: \"Oct\",\n      YearOfPassing: \"2020\",\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"HealtHood (Hospital Automation)\",\n      specialization:\n        \"Frontend Developer, Firebase + Backend Integration and Testing\",\n\n      YearOfLeaving: \"2020\",\n      Achievements: [\n        \"Created multiple instances of App starting with requirements gathering, designing, developing, refactoring, and code implementation\",\n        \"Implemented the redesigned user dashboard with better UX and performance using ReactNative\",\n        \"Integrated Firebase and MERN Stack\",\n        \"API Testing with Postman\",\n        \"Charts and various data visualization using JavaScript Chart Libs\",\n      ],\n    },\n  ],\n  skillsDescription: \"My Skills\",\n  skills: [\n    {\n      skillname: \"ReactJS\",\n      level: 70,\n    },\n    {\n      skillname: \"Reduxjs\",\n      level: 55,\n    },\n    {\n      skillname: \"Nodejs\",\n      level: 65,\n    },\n    {\n      skillname: \"ReactNative\",\n      level: 70,\n    },\n    ,\n    {\n      skillname: \"Flutter\",\n      level: 75,\n    },\n    {\n      skillname: \"Pyhton\",\n      level: 75,\n    },\n  ],\n  portfolio: [\n    {\n      name: \"ReliGo\",\n      description: `Pandemic fund relief app\n        Tools:\n       Flutter, Android Studio`,\n      imgurl: \"images/portfolio/religo.png\",\n    },\n    {\n      name: \"Skoolnet\",\n      description: `developed screens using react-native for IOS/Android\n        Tracked and solved tickets for defects on bug reporting tool (JIRA)\n        Tools: React Native`,\n      imgurl: \"images/skoolnet.jpg\",\n    },\n    {\n      name: \"Dawaadost\",\n      description: `created a vendor App for IOS/Android using react native\n        developed and deployed the frontend and backend of the website\n        Tools: Reactjs,Nodejs,Expressjs,reduxjs,Postgresql,HTML5,CSS3,Nginx,Ant Design`,\n      imgurl: \"images/medicine.jpg\",\n    },\n    {\n      name: \"Mai web\",\n      description: `created pixel perfect responsive Web pages for provided screens\n        using Reactjs\n        Consumed RESTful api for rendering data using Axios\n        Tools: Reactjs,reduxjs,HTML5,CSS3`,\n      imgurl: \"images/parenting.jpg\",\n    },\n  ],\n};\n\nexport default resumeData;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport Testimonials from \"./components/Testimonials\";\nimport ContactUs from \"./components/ContactUs\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n       {/* <Portfolio resumeData={resumeData} /> */}\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}